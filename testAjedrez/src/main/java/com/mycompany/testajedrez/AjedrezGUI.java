/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.testajedrez;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
/**
 *
 * @author 56977
 */
public class AjedrezGUI extends javax.swing.JFrame {
    private JButton[][] casillas;
    private Tablero tablero;
    private boolean turnoBlanco;
    private int origenX, origenY;

    public AjedrezGUI() {
        setTitle("Ajedrez");
        setSize(600, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridLayout(8, 8));

        casillas = new JButton[8][8];
        tablero = new Tablero();
        turnoBlanco = true;

        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                casillas[i][j] = new JButton();
                casillas[i][j].setBackground((i + j) % 2 == 0 ? Color.WHITE : Color.GRAY);
                casillas[i][j].addActionListener(new CasillaClickListener(i, j));
                add(casillas[i][j]);
            }
        }

        actualizarTablero();
    }

    private void actualizarTablero() {
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                Pieza pieza = tablero.getPiezaEnPosicion(i, j);
                if (pieza != null) {
                    casillas[i][j].setIcon(new ImageIcon("ruta/del/archivo/" + pieza.getTipo() + ".png"));
                } else {
                    casillas[i][j].setIcon(null);
                }
            }
        }
    }

    private void moverPieza(int destinoX, int destinoY, Color color) {
        Pieza pieza = tablero.getPiezaEnPosicion(origenX, origenY);
        if (pieza != null && pieza.esMovimientoLegal(origenX, origenY, destinoX, destinoY, tablero)) {
            tablero.moverPieza(origenX, origenY, destinoX, destinoY, color);
            turnoBlanco = !turnoBlanco;
            actualizarTablero();
        }
    }

    private class CasillaClickListener implements ActionListener {
        private int x;
        private int y;

        public CasillaClickListener(int x, int y) {
            this.x = x;
            this.y = y;
        }

        public void actionPerformed(ActionEvent e) {
            if (tablero.getPiezaEnPosicion(x, y) != null) {
                if (turnoBlanco && tablero.getPiezaEnPosicion(x, y).getColor().equals("blanco")) {
                    origenX = x;
                    origenY = y;
                } else if (!turnoBlanco && tablero.getPiezaEnPosicion(x, y).getColor().equals("negro")) {
                    origenX = x;
                    origenY = y;
                }
            } else {
                moverPieza(x, y);
            }
        }

        private void moverPieza(int x, int y) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }
    /**
     * Creates new form AjedrezGUI
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        Partida partida=new Partida();
        partida.jugar();
        
        SwingUtilities.invokeLater(() -> {
            AjedrezGUI ajedrez = new AjedrezGUI();
            ajedrez.setVisible(true);
        });
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AjedrezGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AjedrezGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AjedrezGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AjedrezGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AjedrezGUI().setVisible(true);
            }
            });
                
                }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

